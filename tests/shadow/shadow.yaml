general:
  stop_time: 30 min
network:
  graph:
    type: gml
    inline: |
      graph [
        directed 0
        node [
          id 0
          host_bandwidth_down "1 Gbit"
          host_bandwidth_up "1 Gbit"
        ]
        edge [
          source 0
          target 0
          latency "50 ms"
          jitter "0 ms"
          packet_loss 0.0
        ]
      ]
hosts:
  # Tor network directory authority and relays here
  4uthority:
    network_node_id: 0
    ip_addr: 100.0.0.1
    processes:
    - path: tor
      args: --Address 4uthority --Nickname 4uthority
            --defaults-torrc torrc-defaults -f torrc
      start_time: 1
      expected_final_state: running
    - path: splitpt-server
      args: -log splitpt.log
      environment: { TOR_PT_MANAGED_TRANSPORT_VER: "1",
                     TOR_PT_SERVER_TRANSPORTS: "splitpt",
                     TOR_PT_SERVER_BINDADDR: "splitpt-100.0.0.1:443",
                     TOR_PT_ORPORT: "127.0.0.1:9111" }
      start_time: 1
      expected_final_state: running
  exit1:
    network_node_id: 0
    processes:
    - path: tor
      args: --Address exit1 --Nickname exit1
            --defaults-torrc torrc-defaults -f torrc
      start_time: 60
      expected_final_state: running
  exit2:
    network_node_id: 0
    processes:
    - path: tor
      args: --Address exit2 --Nickname exit2
            --defaults-torrc torrc-defaults -f torrc
      start_time: 60
      expected_final_state: running
  relay1:
    network_node_id: 0
    processes:
    - path: tor
      args: --Address relay1 --Nickname relay1
            --defaults-torrc torrc-defaults -f torrc
      start_time: 60
      expected_final_state: running
  relay2:
    network_node_id: 0
    processes:
    - path: tor
      args: --Address relay2 --Nickname relay2
            --defaults-torrc torrc-defaults -f torrc
      start_time: 60
      expected_final_state: running
  relay3:
    network_node_id: 0
    processes:
    - path: tor
      args: --Address relay3 --Nickname relay3
            --defaults-torrc torrc-defaults -f torrc
      start_time: 60
      expected_final_state: running
  relay4:
    network_node_id: 0
    processes:
    - path: tor
      args: --Address relay4 --Nickname relay4
            --defaults-torrc torrc-defaults -f torrc
      start_time: 60
      expected_final_state: running
  # Intermediate bridge(s)
  bridge1:
    network_node_id: 0
    processes:
    - path: lyrebird
      args: -enableLogging -logLevel DEBUG
      environment: { TOR_PT_MANAGED_TRANSPORT_VER: "1",
                     TOR_PT_SERVER_BINDADDR: "obfs4-0.0.0.0:9090",
                     TOR_PT_SERVER_TRANSPORTS: "obfs4",
                     TOR_PT_ORPORT: "100.0.0.1:443",
                     TOR_PT_STATE_LOCATION: "server-state/" }
      start_time: 1
      expected_final_state: running
  # TGen traffic generator server and client here
  server:
    network_node_id: 0
    processes:
    - path: tgen
      environment: { OPENBLAS_NUM_THREADS: "1" }
      args: tgen-server.graphml.xml
      start_time: 1
      expected_final_state: running
  client:
    network_node_id: 0
    processes:
    - path: splitpt-client
      args: -log splitpt.log
      environment:
        TOR_PT_MANAGED_TRANSPORT_VER: "1"
        TOR_PT_CLIENT_TRANSPORTS: "splitpt"
      start_time: 1
      expected_final_state: running
    # The following snippet was developed by the proteus authors and used with their permission
    # https://github.com/unblockable/proteus/blob/99751539b78782d4477411786e4df03b68213e5d/tests/linux/shadow/tgen/shadow.yaml.template#L53-L69
    - path: python3
      args: |
        -c "def getport():
          with open('splitpt-client.1000.stdout', 'r') as fin:
            for line in fin:
              if line.startswith('CMETHOD splitpt socks5 127.0.0.1:'):
                return line.strip().split(' ')[3].split(':')[1]
          return '0'
        with open('../../conf/torrc.template','r') as fin:
          data = fin.read().replace('${SOCKS5LISTENPORT}', getport())
        with open('torrc','w') as fout:
          fout.write(data)"
      environment: { PYTHONUNBUFFERED: "1" }
      start_time: 2
      expected_final_state: {exited: 0}
    - path: tor
      args: --Address client --Nickname client
            --defaults-torrc torrc-defaults -f torrc
      start_time: 90
      expected_final_state: running
    - path: tgen
      environment: { OPENBLAS_NUM_THREADS: "1" }
      args: tgen-client.graphml.xml
      start_time: 150
      expected_final_state: {exited: 0}
  
